---
web 应用架构
---
### 分布式储存系统

为了简化用户端的使用，提供了一个分布式缓存系统来提供对旧书管理系统的访问接口以及本地数据缓冲以降低网络压力。分布式存储一般都采用副本的方式来确保数据的安全性。写入磁盘前不需要进行额外复杂的计算，就可以将数据写入磁盘，是最快速的方式。是一种空间换时间的方法，即想得到较好的存储性能，就采用副本的方式。

##### 采用分布式储存的原因

我们对于旧书交易平台采用了分布式的储存系统，以期解决可能会遇到的大规模并发性的问题，比如结算交易和点评回馈等模块。我们在了解相关知识后，对储存系统的特性进行了如下的分析：

  1) 存储量很大，经常会达到单台服务器无法提供的规模，比如结算模块、评论板块等。因此需要专业的大规模存储系统。
  
  2) 集中存储的缺点是，物理介质集中布放;视频流上传到中心对机房环境要求高，要求机房空间大，承重、空调等都是需要考虑的问题。对于我们初创项目而言，较高的维护成本是急需解决的一个问题。
  
  3）分布存储的优点是，物理介质分布到不同的地理位置;视频流就近上传，对骨干网带宽没有什么要求;可采用多套低端的小容量的存储设备分布部署，设备价格和维护成本较低;小容量设备分布部署，对机房环境要求低。分布式对不同地区和网络状态的旧书系统会员，可以起到及时响应，优化展开的效果，很好的改善了用户的实际体验，有利于增强用户的粘度和满意的程度。

因此，针对以上的需求和实际的业务运行评估，考虑到潜在的并发情况，我们对旧书管理系统采取了分布式的储存系统

![](https://github.com/Topologies/learnbook/blob/master/Picture/%E5%88%86%E5%B8%83%E5%BC%8F%E5%82%A8%E5%AD%98%E7%B3%BB%E7%BB%9F.jpg)

##### 分布式储存系统的实现

HDFS是Hadoop应用程序使用的主要分布式存储，主要被设计在商用硬件上运行，满足低成本、高容错、高吞吐的特性。这也正是我们选择HDFS的原因。

HDFS具有主从架构，由文件系统元数据管理NameNode和实际数据存储DataNode组成。 一个HDFS集群只有一个NameNode，可以有许多DataNode，一个集群中有一个节点是主节点做为NameNode，其他节点是从节点做为DataNode。

HDFS的结构关系可以看下图：
![](https://github.com/Topologies/learnbook/blob/master/Picture/HDFS.png)

##### 分布式储存优缺点及潜在问题
 
我们在了解其优势的同时，对于面临的挑战进行了详细的分析。

  1) 存分布存储的缺点是，备份困难，如果用户将数据存储在各自的系统上，而不是将他们存储在中央系统中，难于制定一项有效的备份计划。这种情况还可能导致用户使用同一文件的不同版本。
  
  2）为了运行程序要求性能更好的PC机；要求使用适当的程序；不同计算机的文件数据需要复制；对某些PC机要求有足够的存储容量，形成不必要的存储成本；管理和维护比较复杂；设备须要互相兼容。
 
当然，对于这样潜在的问题引燃引起我们足够的重视。我们在后期运维的过程中会对系统进行性能和安全性方面的保障，以保证用户能够正常体验我们提供的服务。
  
###分布式服务器管理系统

分布式资源共享服务器就是指数据和程序可以不位于一个服务器上，而是分散到多个服务器，以网络上分散分布的地理信息数据及受其影响的数据库操作为研究对象的一种理论计算模型服务器形式。在对旧书管理的后台进行构建的时候，可以采用分布式服务器，从而提高客户端在运行时的响应速度。

#####使用分布式服务器管理的原因：

 对于旧书管理平台，为了应对可能出现的大量用户同时访问平台时，造成的服务器资源紧张，以及响应缓慢的问题，我们采用了分布式服务器来对平台进行了管理。以下是使用分布式服务器进行管理的好处：

（1）使用分布式有利于任务在整个计算机系统上进行分配与优化，克服了传统集中式系统会导致中心主机资源紧张与响应瓶颈的缺陷，解决了网络GIS 中存在的数据异构、数据共享、运算复杂等问题，是地理信息系统技术的一大进步。

（2）由于分布式的特性，使用分布式服务器进行管理的时候，配置上比较自由，随时可以增加设备或者减少设备，而不会影响整个系统的正常运行。

（3）针对突发情况，如机房出问题的时候，只有一部分服务器受损，其他服务器还可以照常工作。
#####分布式服务器管理系统的具体实现：

 一、 系统架构：
  该架构下每个服务器都是独立的，分类信息，策略都是独立设置。所有策略都可以在通过总控制台在总服务器上设置，也可以通过子控制台在子服务器上设置，并且总服务器的策略优先于子服务器的策略。总控制台还可以直接查看所有子服务器上的日志等信息。
![Aaron Swartz](https://github.com/xiaoweifeng/BookManage/blob/master/Picture/1.png?raw=true)

（1）组织结构管理：
  总服务器上可以查看各个子服务器的组织架构（只有计算机的，没有用户的）、执行删除子服务器、移动和重命名计算机或计算机组以及卸载和删除计算机的操作。  
 
（2）查看日志：
  在总服务器上可以查看各个子服务器上计算机的各种日志（包括加密文档的操作日志）和统计信息（不能按分类库查看统计和日志）。 
  
（3）设置策略：
  在总服务器上可以对子服务器上的计算机和计算机组设置策略（不能按分类库设置策略），并且优先于子服务器上的策略。   

（4）帐户管理 ：
 登录总服务器的管理员帐户与子服务器的管理员帐户是相互独立的。登录总服务器后，可以设置总服务器的管理员帐户。

 二、解决负载均衡问题：
   
 HAProxy+Keepalived双机高可用均衡负载方案。
HAProxy是免费、极速且可靠的用于为TCP和基于HTTP应用程序提供高可用、负载均衡和代理服务的解决方案，尤其适用于高负载且需要持久连接或7层处理机制的web站点。
不论是Haproxy还是Keepalived甚至是上游服务器均提高生产力并增强可用性,也就是如下架构中Haproxy,Keepalived,Httpd服务器任意宕机一台服务还是可以正常运行的。

HAProxy的优点：

（1）HAProxy是支持虚拟主机的，可以工作在4、7层(支持多网段)；

（2）能够补充Nginx的一些缺点比如Session的保持，Cookie的引导等工作；

（3）支持url检测后端的服务器；

（4）本身仅仅就只是一款负载均衡软件；单纯从效率上来讲HAProxy更会比Nginx有更出色的负载均衡速度，在并发处理上也是优于Nginx的；

（5）HAProxy可以对Mysql读进行负载均衡，对后端的MySQL节点进行检测和负载均衡；
![Aaron Swartz](https://github.com/xiaoweifeng/BookManage/blob/master/Picture/2.jpg?raw=true)


##### 分布式服务器使用上的一些不足：
  （1）不方便管理，管理起来很麻烦，不过在网络管理的今天，这个问题可以降低许多。

（2）对服务器的维护也很麻烦，会造成管理上的一些问题。

（3）硬件太多，且不可能相同，会给管理带来一些问题。
针对这样的问题，在后期的维护工作中必须引起足够的重视，保证 用户 能够享受到良好的用户体验。

##缓存系统介绍

　　随着二手书市场的不断发展，注册与使用用户的增多，在可预见的未来中，网站流量将几何级的增长，对出口形成很大压力。面对这种情况，一是增加宽带，二是经过路由限速。但这都不是理想解决办法，增加带宽就增加了投资成本，限速就降低了用户。所以我们打算在缓存系统上实现以下的功能。

![](http://i.imgur.com/5nNSCeo.png)

###引流本地
　　通过对Web缓存，把外网访问流量引导到局域网，实现流量本地化，节省带宽；消除网络高峰阻塞，上网加速。将二手书的一部分图片和文字介绍缓存到本地。

###实时记录
　　提供内容加速的缓存记录和命中记录，有助于用户即时判断系统工作状态，对其使用效果一目了然。对于与交易相关的价格和库存这不进行缓存，以保证数据的实时性和安全性。
 
###自动清理
　　为了防止缓存对用户系统造成过多影响，系统自动对缓存的内容的命中情况（热度）进行排序，自动清理热度低的内容，以节省磁盘空间。
  
###黑盒存储
　　为了保证被缓存的文件和数据版权不受侵害，维护被缓存站的利益。以防止被竞争者盗链。
 
###科学管理
　　我们的系统将提供网卡流量、资源热度、缓存命中、系统负载等监控功能，可分类分时进行业务分析，为用户进行科学的经营决策提供依据。以此来提高用户的体验好感。
 
###内嵌杀毒
　　本网站将内嵌杀毒引擎，自动扫描杀毒，确保缓存数据安全无毒。确保网站和用户的数据安全。

# 数据库集群系统
## 　分析
　　随着旧书交易平台的宣传推广，用户数量、数据量很可能会有大幅增长，在这样一个不断增长的环境下，数据库面临着严峻的考验。在WEB应用或高性能计算中，为了追求更高的性能及可用性，大家都采用计算机集群技术（将多台服务器联合起来组成集群来实现综合性能优于单个大型服务器的技术）来实现，这种技术不但能满足应用的需要，还大幅度地节约了投资成本。在数据库上，组建集群也是同样的道理，因此我们应用平台采取数据库集群系统主要有以下原因：
<ol>
<li>业务量提高的同时，数据库的访问量和数据量快速增长，其处理能力和计算强度也相应增大，使得单一设备根本无法承担。在此情况下，若扔掉现有设备做大量的硬件升级，势必造成现有资源的浪费，而且下一次业务量提升时，又将面临再一次硬件升级的高额投
入。于是，通过几个中小型服务器组建集群，实现数据库的负载均衡及持续扩展；在需要更高数据库处理速度时，只要简单地增加数据库服务器就可以得到扩展就显得尤为重要。
</li>
<li>数据库作为信息系统的核心，起着非常重要的作用，单一设备根本无法保证系统的持续运行，若发生系统故障，并且严重影响系统的正常运行，从而带来各方面的损失。于是，就可以通过组建数据库集群，实现数据库的高可用性，当某节点发生故障时，系统会自动检测故障并转移故障节点的应用，保证数据库的持续工作。</li>
<li>数据信息往往是很多企业的命脉，单一设备根本无法保证数据的安全性，一旦发生丢失，数据便很难再找回来。这时，通过组建数据库集群，实现数据集的冗余，通过多份数据来保证安全性。</li>
</ol>

## 　实现
　　对于现有类别的数据库系统集群进行了解分析后，我们旧书交易平台可以采用共享磁盘系统。共享磁盘使用了共享文件系统，多个系统访问同一组磁盘。集群中的所有节点必须都能访问共享的磁盘。Oracle共享磁盘系统只运行一个数据库，多个实例都访问同一个数据库。Oracle RAC (oracle真正应用集群)就是一个共享磁盘系统，它实现了多个实例同时访问共享磁盘中的同一个数据库文件。共享磁盘系统中，集群中的多个节点共享同一组共享磁盘，这些磁盘通常配置为某种类型的RAID(如IBM DS4700 )。通常会有一组用来保存集群信息的磁盘，称为quorum盘。RAC中有一个quorum文件，保存在共享的磁盘中，由各个节点来维护，它保存了集群的相关信息。
<br></br>  
<div align=center>
![](https://github.com/glh1011/Web-Developer/blob/master/ORACLERAC.png)
</div>
<br></br>
　　RAC存在的问题主要体现在稳定性和高性能方面
<ol>
<li>稳定性</li>
　　由于各种硬件设备、操作系统的厂商不同，有时候在兼容性上会存在问题，同时，由于RAC本身也存在不少bug，很多部署的RAC环境缺乏在上线前对环境的检查和测试，导致在运行过程中出现一系列不稳定的情况，这样高可用性并没有得到充分的体现。因此，稳定的硬件环境加上稳定的RAC版本，决定着RAC运行的稳定性。旧书交易平台数据库在安装配置前要进行大量的环境检查、验证，部署后的大量测试工作都是非常重要的。
<li>高性能</li>
　　在目前普遍使用千兆网络的硬件环境中，很多时候系统的数据库从原来的单机迁移至RAC环境，系统的性能反而下降。这样就需要我们更加合理的设计、开发和调整系统，以达到提高性能的目的。
</ol>
